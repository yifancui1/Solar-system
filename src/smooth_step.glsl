// Filter an input value to perform a smooth step. This function should be a
// cubic polynomial with smooth_step(0) = 0, smooth_step(1) = 1, and zero first
// derivatives at f=0 and f=1. 
//
// Inputs:
//   f  input value
// Returns filtered output value
float smooth_step( float f)
{
  /////////////////////////////////////////////////////////////////////////////
  // Replace with your code 
  // y = ax^3+bx^2+cx
  // a+b+c = 1
  // 3a+2b+c = 0
  // c = 0;
  return -2.0*f*f*f+3.0*f*f;
  /////////////////////////////////////////////////////////////////////////////
}

vec3 smooth_step( vec3 f)
{
  /////////////////////////////////////////////////////////////////////////////
  // Replace with your code 
  return -2.0*f*f*f+3.0*f*f;
  /////////////////////////////////////////////////////////////////////////////
}
